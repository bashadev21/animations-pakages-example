import 'package:animations/animations.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

Future main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await SystemChrome.setPreferredOrientations([
    DeviceOrientation.portraitUp,
    DeviceOrientation.portraitDown,
  ]);

  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  static final String title = 'Shared Axis';

  @override
  Widget build(BuildContext context) => MaterialApp(
        debugShowCheckedModeBanner: false,
        title: title,
        theme: ThemeData(primarySwatch: Colors.red),
        home: SharedAxisPage(),
      );
}

class CardWidget extends StatelessWidget {
  final int index;

  const CardWidget({
    Key key,
    @required this.index,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final urlImage = 'https://source.unsplash.com/random?sig=$index';

    return Card(
      child: Stack(
        children: <Widget>[
          Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: <Widget>[
              Expanded(
                child: Container(
                  color: Colors.black26,
                  child: Image.network(urlImage, fit: BoxFit.cover),
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: <Widget>[
                    Text(
                      'Random Photo',
                      style: Theme.of(context).textTheme.bodyText1,
                    ),
                    Text(
                      'Unsplash',
                      style: Theme.of(context).textTheme.caption,
                    ),
                  ],
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
}

class FirstPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) => GridView.builder(
        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 2,
        ),
        itemCount: 10,
        itemBuilder: (context, index) => CardWidget(index: index),
      );
}

class SecondPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) => ListView.builder(
        itemCount: 10,
        itemBuilder: (context, index) => Container(
          height: 200,
          child: CardWidget(index: index),
        ),
      );
}

class SharedAxisPage extends StatefulWidget {
  @override
  _SharedAxisPageState createState() => _SharedAxisPageState();
}

class _SharedAxisPageState extends State<SharedAxisPage> {
  bool isFirstPage = true;

  @override
  Widget build(BuildContext context) => Scaffold(
        appBar: AppBar(title: Text('Shared Axis')),
        body: Column(
          children: <Widget>[
            Expanded(child: buildCards()),
            buildButtons(),
          ],
        ),
      );

  Widget buildCards() => PageTransitionSwitcher(
        duration: Duration(milliseconds: 800),
        reverse: isFirstPage,
        transitionBuilder: (child, animation, secondaryAnimation) => SharedAxisTransition(
          child: child,
          animation: animation,
          secondaryAnimation: secondaryAnimation,
          transitionType: SharedAxisTransitionType.horizontal,
        ),
        child: isFirstPage ? FirstPage() : SecondPage(),
      );

  Widget buildButtons() => Container(
        padding: const EdgeInsets.symmetric(horizontal: 15),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: <Widget>[
            TextButton(
              onPressed: isFirstPage ? null : togglePage,
              child: Text('BACK'),
            ),
            ElevatedButton(
              onPressed: isFirstPage ? togglePage : null,
              child: Text('NEXT'),
            ),
          ],
        ),
      );

  void togglePage() => setState(() => isFirstPage = !isFirstPage);
}
